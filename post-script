#!/usr/bin/env bash
set -euo pipefail

# ─── 1) System packages ───────────────────────────────────────────────────────
sudo pacman -Syu --needed \
  base-devel git \
  obsidian swww waybar coreutils python-pipx rofi exa zoxide fzf

# ─── 2) pipx & Exegol ─────────────────────────────────────────────────────────
pipx ensurepath # add ~/.local/bin to your PATH if needed
pipx install exegol

# ─── 3) Install yay (AUR helper) ──────────────────────────────────────────────
cd /tmp
git clone https://aur.archlinux.org/yay.git
cd yay
makepkg -si --noconfirm

# ─── 4) AUR packages ──────────────────────────────────────────────────────────
yay -S --noconfirm min-browser zsh

# ─── 5) fzf integration ──────────────────────────────────────────────────────
if [[ ! -d "${HOME}/.fzf" ]]; then
  git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf
fi
# run the installer non-interactively (writes to ~/.zshrc for you)
yes | ~/.fzf/install --all

# ─── 6) Oh My Zsh (non-interactive) ───────────────────────────────────────────
export RUNZSH=no # don’t spawn a new shell at the end
export CHSH=no   # we’ll chsh ourselves explicitly below
sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"

# ─── 7) Change your login shell to Zsh ────────────────────────────────────────
chsh -s "$(which zsh)" "$USER"

# ─── 8) Dotfiles bootstrap ────────────────────────────────────────────────────
if [[ ! -d "${HOME}/dotfiles" ]]; then
  git clone https://github.com/yourusername/your-dotfiles.git ~/dotfiles
fi
cd ~/dotfiles
./install
